steps:
- checkout: none
- task: DownloadBuildArtifacts@1
  inputs:
    buildType: "current"
    downloadType: "single"
    artifactName: "$(Build.BuildId)-drop"
    downloadPath: "$(System.ArtifactsDirectory)"
  displayName: "Download Build Artifacts"

- script: |
    echo "Contents of downloaded artifact (top-level):"
    ls -la "$(System.ArtifactsDirectory)/$(Build.BuildId)-drop" || true
    echo "Contents of possible dist folder:"
    ls -la "$(System.ArtifactsDirectory)/$(Build.BuildId)-drop/dist" || true
  displayName: 'Debug: List downloaded artifact contents'

- task: AzureCLI@2
  inputs:
    azureSubscription: $(AZURE_SUBSCRIPTION)
    scriptType: "bash"
    scriptLocation: "inlineScript"
    inlineScript: |
      # If $web doesn't exist, enable static website and create $web container
      has_web=$( \
        az storage container exists \
          --name '$web' \
          --account-name '$(STORAGE_ACCOUNT)' \
          --account-key '$(STORAGE_KEY)' \
          --query "exists" \
          -o tsv || echo "false" \
      )
      if [ "$has_web" != "true" ]; then
        echo "'\$web' container not found. Enabling static website (creates \$web)..."
        az storage blob service-properties update \
          --account-name '$(STORAGE_ACCOUNT)' \
          --account-key '$(STORAGE_KEY)' \
          --static-website \
          --index-document index.html \
        echo "Static website enabled (created \$web)."
      else
        echo "'\$web' container exists."
      fi

      # upload to the special static-website container named $web
      az storage blob upload-batch \
        --destination '$web' \
        --account-name '$(STORAGE_ACCOUNT)' \
        --account-key '$(STORAGE_KEY)' \
        --source "$(System.ArtifactsDirectory)/$(Build.BuildId)-drop/dist" \
        --overwrite
  displayName: "Deploy to Azure Storage"